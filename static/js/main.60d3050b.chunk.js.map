{"version":3,"sources":["components/Brand.jsx","components/TypeBar.jsx","components/Heart.jsx","components/Device.jsx","api/api.js","api/deviceApi.js","components/Devices.jsx","pages/Catalog.jsx","App.jsx","store/Device.store.js","index.jsx"],"names":["Brand","memo","brand","checkedBrand","className","type","name","onClick","e","id","TypeBar","observer","device","useContext","Context","useState","price","setPrice","useCallback","target","checked","setSelectedBrandId","delSelectedBrandId","devices","length","value","min","onChange","onBlur","max","brands","map","Heart","activeHeart","setActiveHeart","Device","src","image","desktop","x1","alt","is_new","title","instance","axios","create","baseURL","getAllDevices","selectedBrands","priceMin","priceMax","a","get","params","data","Devices","useEffect","selectedBrandId","then","setDevices","products","setIsLoading","console","log","Catalog","App","DeviceStore","this","_devices","_brands","_selectedBrandId","_price","makeAutoObservable","filter","el","createContext","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.60d3050b.chunk.js","sourcesContent":["import React, {memo} from 'react';\n\nconst Brand = memo(({brand, checkedBrand}) => {\n\n    return (\n        <div className='brand'>\n            <label>\n                <input\n                    type=\"checkbox\"\n                    name=\"travel-notes\"\n                    className=\"real-checkbox\"\n                    onClick={(e) => checkedBrand(e, brand.id)}\n\n                />\n                <span className=\"custom-checkbox\"></span>\n                {brand.name}\n            </label>\n            {/*<input*/}\n            {/*    onClick={(e) => checkedBrand(e, brand.id)}*/}\n            {/*    type=\"checkbox\"*/}\n            {/*    id=\"checkbox-id\"*/}\n            {/*/>*/}\n            {/*<label htmlFor=\"checkbox-id\"></label>*/}\n            {/*{brand.name}*/}\n        </div>\n    );\n});\n\nexport default Brand;","import React, {useCallback, useContext, useState} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Brand from \"./Brand\";\n\nconst TypeBar = observer(() => {\n    const {device} = useContext(Context)\n    const [price, setPrice] = useState(device.price)\n\n    const checkedBrand = useCallback((e, id) => {\n        if (e.target.checked) {\n            device.setSelectedBrandId(id)\n        } else {\n            device.delSelectedBrandId(id)\n        }\n    }, [])\n\n    return (\n        <div className='typeBar'>\n            <div className='count_device'>Товаров {device.devices.length}</div>\n            <h1 className='type_device'>Камеры</h1>\n            <h2 className='price'>Цена, ₽</h2>\n            <div className='inputBlock'>\n                <input\n                    type=\"text\"\n                    value={price.min}\n                    onChange={(e) => setPrice({...price, min: e.target.value})}\n                    onBlur={() => device.setPrice(price)}\n                />\n                <input\n                    type=\"text\"\n                    value={price.max}\n                    onChange={(e) => setPrice({...price, max: e.target.value})}\n                    onBlur={() => device.setPrice(price)}\n                />\n            </div>\n            <h2 className='brand_name'>Брэнд</h2>\n            {device.brands.map(brand =>\n                <Brand\n                    key={brand.id}\n                    brand={brand}\n                    checkedBrand={checkedBrand}\n                />\n            )}\n        </div>\n    );\n});\n\nexport default TypeBar;","import React, {useState} from 'react';\r\n\r\nconst Heart = () => {\r\n    const [activeHeart, setActiveHeart] = useState(false)\r\n\r\n    return (\r\n        activeHeart\r\n            ?\r\n            <button\r\n                className='heart heart_active'\r\n                onClick={() => setActiveHeart(!activeHeart)}\r\n            >\r\n            </button>\r\n            :\r\n            <button\r\n                className='heart'\r\n                onClick={() => setActiveHeart(!activeHeart)}\r\n            >\r\n            </button>\r\n    );\r\n};\r\n\r\nexport default Heart;","import React, {memo} from 'react';\nimport Heart from \"./Heart\";\n\nconst Device = memo(({device}) => {\n\n    return (\n        <div className='device'>\n            <div className='device_photo'>\n                <img src={device.image.desktop.x1} alt=\"\"/>\n                {device.is_new && <span className='device_newDevice'>новинка</span>}\n\n            </div>\n            <div className=\"device_wrapper\">\n                <div className=\"device_name\">\n                    {device.title}\n                </div>\n                <div className='device_priceBlock'>\n                    <div className=\"device_price\">\n                        {device.price + ' ₽'}\n                    </div>\n                    {device.is_new && <div className='device_new'>Новое</div>}\n                </div>\n                <div className='device_groupBtn'>\n                    <button className='device_btn'>В корзину</button>\n                    <Heart/>\n                </div>\n            </div>\n\n        </div>\n    );\n});\n\nexport default Device;","import axios from \"axios\";\n\nexport const instance = axios.create({\n    baseURL: 'https://getlens-master.stage.dev.family/api/pages/obektivy'\n})\n\n","import {instance} from \"./api\";\n\n\nexport const getAllDevices = async (selectedBrands, priceMin, priceMax) => {\n        const {data} = await instance.get(``, {\n            params: {\n                'brands[]': selectedBrands,\n                'price[min]': priceMin,\n                'price[max]': priceMax\n            }\n        })\n\n        return data\n}","import React, {useContext, useEffect} from 'react';\nimport Device from \"./Device\";\nimport {Context} from \"../index\";\nimport {observer} from \"mobx-react-lite\";\nimport {getAllDevices} from \"../api/deviceApi\";\n\n\nconst Devices = observer(() => {\n    const {device} = useContext(Context)\n\n    useEffect(() => {\n        try {\n            getAllDevices(device.selectedBrandId, device.price.min, device.price.max)\n                .then(data => device.setDevices(data.products))\n            device.setIsLoading(false)\n        } catch (e) {\n            console.log(e)\n        }\n\n\n    }, [device.selectedBrandId, device.price.min, device.price.max])\n\n    return (\n\n        <div className='devices'>\n            {device.devices.map(device =>\n                <Device\n                    key={device.id}\n                    device={device}\n                />\n            )}\n\n        </div>\n\n\n    );\n});\n\nexport default Devices;","import React from 'react';\nimport TypeBar from \"../components/TypeBar\";\nimport Devices from \"../components/Devices\";\n\nconst Catalog = () => {\n    return (\n            <div className='catalog'>\n                <TypeBar/>\n                <Devices/>\n        </div>\n\n    );\n};\n\nexport default Catalog;","import React from 'react';\nimport './App.css';\nimport Catalog from \"./pages/Catalog\";\n\nconst App = () => {\n    return (\n        <Catalog/>\n    );\n}\n\nexport default App;\n","import {makeAutoObservable} from \"mobx\";\n\nexport default class DeviceStore {\n    constructor() {\n        this._devices = []\n        this._brands = [\n            {id: 1, name: 'Canon'},\n            {id: 9, name: 'Nikon'}\n        ]\n        this._selectedBrandId = []\n\n        this._price = {\n            min: '0',\n            max: '0'\n        }\n\n\n        makeAutoObservable(this)\n    }\n\n    setDevices(devices) {\n        this._devices = devices\n    }\n\n    setBrands(brands) {\n        this._brands = brands\n    }\n\n    setSelectedBrandId(id) {\n        this._selectedBrandId = [...this.selectedBrandId, id]\n    }\n\n    delSelectedBrandId(id) {\n        this._selectedBrandId = [...this.selectedBrandId.filter(el => el !== id)]\n    }\n\n    setPrice(price) {\n        this._price = price\n    }\n\n\n    get devices() {\n        return this._devices\n    }\n\n    get brands() {\n        return this._brands\n    }\n\n    get selectedBrandId() {\n        return this._selectedBrandId\n    }\n\n    get price() {\n        return this._price\n    }\n\n\n}","import React, {createContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport DeviceStore from \"./store/Device.store\";\n\n\nexport const Context = createContext(null)\n\nReactDOM.render(\n    <Context.Provider value={\n        {\n            device: new DeviceStore()\n        }\n    }>\n        <App/>\n    </Context.Provider>,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}