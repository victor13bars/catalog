{"version":3,"sources":["components/Brand.jsx","components/TypeBar.jsx","components/Device.jsx","api/api.js","api/deviceApi.js","components/Devices.jsx","pages/Catalog.jsx","App.jsx","store/Device.store.js","index.jsx"],"names":["Brand","memo","brand","checkedBrand","className","onClick","e","id","type","htmlFor","name","TypeBar","observer","device","useContext","Context","useState","price","setPrice","useCallback","target","checked","setSelectedBrandId","delSelectedBrandId","devices","length","value","min","onChange","onBlur","max","brands","map","Device","src","image","desktop","x1","alt","is_new","title","instance","axios","create","baseURL","getAllDevices","selectedBrands","priceMin","priceMax","a","get","params","data","Devices","useEffect","selectedBrandId","then","setDevices","products","setIsLoading","console","log","Catalog","App","DeviceStore","this","_devices","_brands","_selectedBrandId","_price","makeAutoObservable","filter","el","createContext","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.3f886ece.chunk.js","sourcesContent":["import React, {memo} from 'react';\r\n\r\nconst Brand = memo(({brand, checkedBrand}) => {\r\n\r\n    return (\r\n        <div className='brand'>\r\n            <input\r\n                onClick={(e) => checkedBrand(e, brand.id)}\r\n                type=\"checkbox\"\r\n                id=\"checkbox-id\"\r\n            />\r\n            <label htmlFor=\"checkbox-id\"></label>\r\n            {brand.name}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Brand;","import React, {useCallback, useContext, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport Brand from \"./Brand\";\r\n\r\nconst TypeBar = observer(() => {\r\n    const {device} = useContext(Context)\r\n    const [price, setPrice] = useState(device.price)\r\n\r\n    const checkedBrand = useCallback((e, id) => {\r\n        if (e.target.checked) {\r\n            device.setSelectedBrandId(id)\r\n        } else {\r\n            device.delSelectedBrandId(id)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className='typeBar'>\r\n            <div className='count_device'>Товаров {device.devices.length}</div>\r\n            <h1 className='type_device'>Камеры</h1>\r\n            <h2 className='price'>Цена, ₽</h2>\r\n            <div className='inputBlock'>\r\n                <input\r\n                    type=\"text\"\r\n                    value={price.min}\r\n                    onChange={(e) => setPrice({...price, min: e.target.value})}\r\n                    onBlur={() => device.setPrice(price)}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    value={price.max}\r\n                    onChange={(e) => setPrice({...price, max: e.target.value})}\r\n                    onBlur={() => device.setPrice(price)}\r\n                />\r\n            </div>\r\n            <h2 className='brand_name'>Брэнд</h2>\r\n            {device.brands.map(brand =>\r\n                <Brand\r\n                    key={brand.id}\r\n                    brand={brand}\r\n                    checkedBrand={checkedBrand}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default TypeBar;","import React, {memo} from 'react';\r\n\r\nconst Device = memo(({device}) => {\r\n\r\n    return (\r\n        <div className='device'>\r\n            <div className='device_photo'>\r\n                <img src={device.image.desktop.x1} alt=\"\"/>\r\n                {device.is_new && <span className='device_newDevice'>новинка</span>}\r\n\r\n            </div>\r\n            <div className=\"device_wrapper\">\r\n                <div className=\"device_name\">\r\n                    {device.title}\r\n                </div>\r\n                <div className='device_priceBlock'>\r\n                    <div className=\"device_price\">\r\n                        {device.price + ' ₽'}\r\n                    </div>\r\n                    {device.is_new && <div className='device_new'>Новое</div>}\r\n                </div>\r\n                <div className='device_groupBtn'>\r\n                    <button className='device_btn'>В корзину</button>\r\n                    <div className='heart'></div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Device;","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://getlens-master.stage.dev.family/api/pages/obektivy'\r\n})\r\n\r\n","import {instance} from \"./api\";\r\n\r\n\r\nexport const getAllDevices = async (selectedBrands, priceMin, priceMax) => {\r\n        const {data} = await instance.get(``, {\r\n            params: {\r\n                'brands[]': selectedBrands,\r\n                'price[min]': priceMin,\r\n                'price[max]': priceMax\r\n            }\r\n        })\r\n\r\n        return data\r\n}","import React, {useContext, useEffect} from 'react';\r\nimport Device from \"./Device\";\r\nimport {Context} from \"../index\";\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {getAllDevices} from \"../api/deviceApi\";\r\n\r\n\r\nconst Devices = observer(() => {\r\n    const {device} = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        try {\r\n            getAllDevices(device.selectedBrandId, device.price.min, device.price.max)\r\n                .then(data => device.setDevices(data.products))\r\n            device.setIsLoading(false)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n\r\n    }, [device.selectedBrandId, device.price.min, device.price.max])\r\n\r\n    return (\r\n\r\n        <div className='devices'>\r\n            {device.devices.map(device =>\r\n                <Device\r\n                    key={device.id}\r\n                    device={device}\r\n                />\r\n            )}\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n});\r\n\r\nexport default Devices;","import React from 'react';\r\nimport TypeBar from \"../components/TypeBar\";\r\nimport Devices from \"../components/Devices\";\r\n\r\nconst Catalog = () => {\r\n    return (\r\n            <div className='catalog'>\r\n                <TypeBar/>\r\n                <Devices/>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Catalog;","import React from 'react';\nimport './App.css';\nimport Catalog from \"./pages/Catalog\";\n\nconst App = () => {\n    return (\n        <Catalog/>\n    );\n}\n\nexport default App;\n","import {makeAutoObservable} from \"mobx\";\r\n\r\nexport default class DeviceStore {\r\n    constructor() {\r\n        this._devices = []\r\n        this._brands = [\r\n            {id: 1, name: 'Canon'},\r\n            {id: 9, name: 'Nikon'}\r\n        ]\r\n        this._selectedBrandId = []\r\n\r\n        this._price = {\r\n            min: '0',\r\n            max: '0'\r\n        }\r\n\r\n\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setDevices(devices) {\r\n        this._devices = devices\r\n    }\r\n\r\n    setBrands(brands) {\r\n        this._brands = brands\r\n    }\r\n\r\n    setSelectedBrandId(id) {\r\n        this._selectedBrandId = [...this.selectedBrandId, id]\r\n    }\r\n\r\n    delSelectedBrandId(id) {\r\n        this._selectedBrandId = [...this.selectedBrandId.filter(el => el !== id)]\r\n    }\r\n\r\n    setPrice(price) {\r\n        this._price = price\r\n    }\r\n\r\n\r\n    get devices() {\r\n        return this._devices\r\n    }\r\n\r\n    get brands() {\r\n        return this._brands\r\n    }\r\n\r\n    get selectedBrandId() {\r\n        return this._selectedBrandId\r\n    }\r\n\r\n    get price() {\r\n        return this._price\r\n    }\r\n\r\n\r\n}","import React, {createContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport DeviceStore from \"./store/Device.store\";\n\n\nexport const Context = createContext(null)\n\nReactDOM.render(\n    <Context.Provider value={\n        {\n            device: new DeviceStore()\n        }\n    }>\n        <App />\n    </Context.Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}